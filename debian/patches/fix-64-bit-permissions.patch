From af36ba206f7cf0eef77a82af741766a2d03c51ad Mon Sep 17 00:00:00 2001
From: Timo Teras <timo.teras@iki.fi>
Date: Fri, 10 Feb 2012 07:55:24 +0000
Subject: mkdir: fix permissions on 64-bit platforms
Bug-Ubuntu: https://bugs.launchpad.net/bugs/980772

sizeof(long) != sizeof(mode_t), this causes the compare in
bb_make_directory of (long)-1 != (mode_t)-1 to fail and mess up
the permissions of final directory by doing chmod((mode_t) -1).

Signed-off-by: Timo Teras <timo.teras@iki.fi>
Signed-off-by: Denys Vlasenko <vda.linux@googlemail.com>
---
diff --git a/coreutils/mkdir.c b/coreutils/mkdir.c
index a4429b1..b33b6bb 100644
--- a/coreutils/mkdir.c
+++ b/coreutils/mkdir.c
@@ -54,7 +54,7 @@ static const char mkdir_longopts[] ALIGN1 =
 int mkdir_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int mkdir_main(int argc UNUSED_PARAM, char **argv)
 {
-	mode_t mode = (mode_t)(-1);
+	long mode = -1;
 	int status = EXIT_SUCCESS;
 	int flags = 0;
 	unsigned opt;
@@ -68,10 +68,11 @@ int mkdir_main(int argc UNUSED_PARAM, char **argv)
 #endif
 	opt = getopt32(argv, "m:p" IF_SELINUX("Z:"), &smode IF_SELINUX(,&scontext));
 	if (opt & 1) {
-		mode = 0777;
-		if (!bb_parse_mode(smode, &mode)) {
+		mode_t mmode = 0777;
+		if (!bb_parse_mode(smode, &mmode)) {
 			bb_error_msg_and_die("invalid mode '%s'", smode);
 		}
+		mode = mmode;
 	}
 	if (opt & 2)
 		flags |= FILEUTILS_RECUR;
--
cgit v0.9.0.1-2-gef13
